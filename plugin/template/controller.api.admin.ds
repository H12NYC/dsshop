<?php
/** +----------------------------------------------------------------------
 * | TFSHOP [ 轻量级易扩展低代码开源商城系统 ]
 * +----------------------------------------------------------------------
 * | Copyright (c) 2020~2023 https://www.dswjcms.com All rights reserved.
 * +----------------------------------------------------------------------
 * | Licensed 未经许可不能去掉TFSHOP相关版权
 * +----------------------------------------------------------------------
 * | Author: Purl <383354826@qq.com>
 * +----------------------------------------------------------------------
 */
namespace App\Http\Controllers\v{{ versions }}\Plugin\Admin;

use App\Code;
use App\Http\Requests\v{{ versions }}\Submit{{ name }}Request;
use App\Models\v{{ versions }}\{{ name }};
use App\Models\v{{ versions }}\Resource;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;

/**
 * @group [ADMIN]{{ name }}({{ annotation }})
 * Class {{ name }}Controller
 * @package App\Http\Controllers\v{{ versions }}\Plugin\Admin
 */
class {{ name }}Controller extends Controller
{
    /**
     * {{ name }}List
     * {{ annotation }}列表
     * @param Request $request
     * @return \Illuminate\Http\Response
     * @queryParam  limit int 每页显示条数
     * @queryParam  sort string 排序
     * @queryParam  page string 页码
     */
    public function list(Request $request)
    {
        {{ name }}::$withoutAppends = false;
        $q = {{ name }}::query();
        $limit = $request->limit;
        if ($request->has('sort')) {
            $sortFormatConversion = sortFormatConversion($request->sort);
            $q->orderBy($sortFormatConversion[0], $sortFormatConversion[1]);
        }
        $paginate = $q->paginate($limit);
        return resReturn(1, $paginate);
    }

    /**
     * {{ name }}Create
     * {{ annotation }}添加
     * @param Submit{{ name }}Request $request
     * @return \Illuminate\Http\Response
     {{ queryParam }}
     */
    public function create(Submit{{ name }}Request $request)
    {
        DB::transaction(function () use ($request) {
            ${{ name }} = new {{ name }}();
            {{ attribute }}
            ${{ name }}->save();
        }, 5);
        return resReturn(1, '添加成功');
    }

    /**
     * {{ name }}Detail
     * {{ annotation }}详情
     * @param int $id
     * @return \Illuminate\Http\Response
     * @queryParam  id int {{ annotation }}ID
     */
    public function detail($id)
    {
        ${{ name }} = {{ name }}::find($id);
        return resReturn(1, ${{ name }});
    }

    /**
     * {{ name }}Edit
     * {{ annotation }}更新
     * @param Submit{{ name }}Request $request
     * @param int $id
     * @return \Illuminate\Http\Response
     * @queryParam  id int {{ annotation }}ID
     {{ queryParam }}
     */
    public function edit(Submit{{ name }}Request $request, $id)
    {
        DB::transaction(function () use ($request, $id) {
            ${{ name }} = {{ name }}::find($id);
            {{ attribute }}
            ${{ name }}->save();
        }, 5);
        return resReturn(1, '更新成功');
    }

    /**
     * {{ name }}Destroy
     * {{ annotation }}删除
     * @param int $id
     * @param Request $request
     * @return \Illuminate\Http\Response
     * @queryParam  id int {{ annotation }}ID
     */
    public function destroy($id, Request $request)
    {
        DB::transaction(function () use ($request, $id) {
            if ($id > 0) {
                {{ name }}::destroy($id);
            } else {
                if (!$request->all()) {
                    throw new \Exception('请选择内容', Code::CODE_WRONG);
                }
                $idData = collect($request->all())->pluck('id');
                {{ name }}::destroy($idData);
            }
        }, 5);
        return resReturn(1, '删除成功');
    }
}
