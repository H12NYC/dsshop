<?php
/** +----------------------------------------------------------------------
 * | TFSHOP [ 轻量级易扩展低代码开源商城系统 ]
 * +----------------------------------------------------------------------
 * | Copyright (c) 2020~2023 https://www.dswjcms.com All rights reserved.
 * +----------------------------------------------------------------------
 * | Licensed 未经许可不能去掉TFSHOP相关版权
 * +----------------------------------------------------------------------
 * | Author: Purl <383354826@qq.com>
 * +----------------------------------------------------------------------
 */
namespace App\Observers\{{ package }};

use Illuminate\Http\Request;
use App\Models\v{{ versions }}\{{ package }};

/**
 * {{ enExplain }}
 * {{ explain }}
 * Class {{ name }}Observer
 * @package App\Observers\{{ package }}
 */
class {{ name }}Observer
{
    protected $request;
    protected $route = [
        // 这里配置需要执行该观察者的路由
        {{ route }}
    ];
    protected $execute = false;

    public function __construct(Request $request)
    {
        // 是否执行观察者，默认为不执行，只有路由存在于$route时才会触发,并且在非http请求时不会触发
        if (!app()->runningInConsole()) {
            $this->request = $request;
            $path = explode("admin", $request->path());
            if (count($path) == 2) {
                $name = 'admin' . $path[1];
                // 如果路由带参数，请用以下代码
//                $name = 'admin' . preg_replace("/\/\\d+/", '', $path[1]);
            } else {
                $path = explode("app", $request->path());
                $name = 'app' . $path[1];
                // 如果路由带参数，请用以下代码
//                $name = 'app' . preg_replace("/\/\\d+/", '', $path[1]);
            }
            if (collect($this->route)->contains($name)) {
                $this->execute = true;
            }
        }
    }

    public function updated({{ package }} ${{ packages }})
    {
        // 只有配置的路由存在于$route或通过console执行时才会触发,console执行时需要自行添加唯一条件
        if (($this->execute || app()->runningInConsole())) {
            // 需要执行的业务代码
        }
    }
}
